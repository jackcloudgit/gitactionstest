name: GitHub Deployment Status

on:
  workflow_dispatch:
    inputs:
      environment:
        description: "Environment name (e.g., develop-1, release)"
        required: true
      ref:
        description: "Git ref to deploy (branch, tag, or SHA)"
        required: true
      repository:
        description: "Git repository"
        required: true
      deployment_id:
        description: "Existing Deployment ID (optional, skips creating a new deployment)"
        required: false
      deployment_status:
        description: "Deployment status to mark"
        required: true
        default: success
        type: choice
        options:
          - queued
          - in_progress
          - success
          - failure
          - error
          - inactive
jobs:
  deploy:
    runs-on: ubuntu-latest
    env:
      GH_TOKEN: ${{ secrets.COMMON_CI_SECRET }}
      
    steps:
      - name: Create Deployment via GitHub CLI
        id: create_deployment
        if: ${{ inputs.deployment_id == '' }}
        run: |
          echo "Creating deployment for ref=${{ inputs.ref }} to environment=${{ inputs.environment }}"
          
          DEPLOYMENT_RESPONSE=$(gh api --method POST -H "Accept: application/vnd.github+json" -H "X-GitHub-Api-Version: 2022-11-28" \
            /repos/${{ inputs.repository }}/deployments \
            -f ref="${{ inputs.ref }}" \
            -f environment="${{ inputs.environment }}" \
            -f description="${{ inputs.description }}" \
            -f payload="{ \"deploy\": \"migrate\" }"
          )

          echo "DEPLOYMENT_RESPONSE: $DEPLOYMENT_RESPONSE"

          DEPLOYMENT_ID=$(echo "$DEPLOYMENT_RESPONSE" | jq -r '.id')
          echo "Deployment ID: $DEPLOYMENT_ID"
          echo "DEPLOYMENT_ID=$DEPLOYMENT_ID" >> $GITHUB_ENV

      - name: Set Deployment ID from Input (if provided)
        if: ${{ inputs.deployment_id != '' }}
        run: |
          echo "Using provided Deployment ID: ${{ inputs.deployment_id }}"
          echo "DEPLOYMENT_ID=${{ inputs.deployment_id }}" >> $GITHUB_ENV

      - name: Mark Deployment Successful
        run: |
          echo "Marking Deployment ID $DEPLOYMENT_ID as successful"
          gh api repos/${{ inputs.repository }}/deployments/${DEPLOYMENT_ID}/statuses \
            -f state=${{ inputs.deployment_status }} \
            -f environment="${{ inputs.environment }}" \
            -f description="${{ inputs.description }}" \
            -f log_url="https://github.com/${{ inputs.repository }}/actions/runs/${{ github.run_id }}"
